name: 'Deploy CMS'

on:
  workflow_call:
    inputs:
      CMS_DIR:
        required: true
        type: string
      CMS_TYPES:
        required: true
        type: string

    secrets:
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      SSH_PORT:
        required: true
      SSH_KEY:
        required: true
      NPM_AUTH_TOKEN:
        required: false

env:
  TAG_NAME: ${{ github.ref_name }}
  ENV_DEPLOY: ${{ github.ref_name == 'develop' && 'dev' || 'prod' }}
  NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CMS_TYPE: ${{ fromJson(inputs.CMS_TYPES) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Build
        run: CI=false yarn run build${{ matrix.CMS_TYPE == 'workplace' && ':workplace' || '' }}:${{ env.ENV_DEPLOY }}

      - name: Copy build dist to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "dist/"
          target: "/var/www/oms-${{ matrix.CMS_TYPE }}-${{ env.ENV_DEPLOY }}/${{ inputs.CMS_DIR }}/${{ env.TAG_NAME }}"
          strip_components: 1
      - name: Point to lastest release version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            ln -nsf /var/www/oms-${{ matrix.CMS_TYPE }}-${{ env.ENV_DEPLOY }}/${{ inputs.CMS_DIR }}/${{ env.TAG_NAME }} /var/www/oms-${{ matrix.CMS_TYPE }}-${{ env.ENV_DEPLOY }}/${{ inputs.CMS_DIR }}/current
